version: '3.1'

services:
  restapi:
    build: .
    image: sensor-restapi
    container_name: sensor-api
    environment:
      METRICS_PORT: ${METRICS_PORT}
    ports:
      - '8080:80'
    networks:
      - private

  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: sensor-api-db
    ports:
      - '5432:5432'
    volumes:
      - db-storage:/var/lib/postgresql/data
    networks:
      - private

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - restapi
    restart: unless-stopped
    ports:
      - '9090:9090'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - prometheus-data:/prometheus # for data
      - prometheus-storage:/etc/prometheus # for configuration
    networks:
      - private

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/etc/grafana/provisioning/datasources
    networks:
      - private

networks:
  private:
    driver: bridge

volumes:
  grafana-storage:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${PWD}/Docker/grafana-storage'

  prometheus-storage:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${PWD}/Docker/prometheus/prometheus-storage'

  prometheus-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${PWD}/Docker/prometheus/prometheus-data'

  db-storage:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${PWD}/Docker/db-storage'
