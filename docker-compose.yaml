version: "3.1"

services:
  restapi:
    build: .
    image: sensor-restapi:latest
    container_name: sensor-api
    ports:
      - "8080:80"
      - "1337:1337"
    networks:
      - private

  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: rpg-api-db
    # ports:
    #   - "5432:5432"
    volumes:
      - db-storage:/var/lib/postgresql/data
    networks:
      - private

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus # for data
      - prometheus-storage:/etc/prometheus # for configuration
    networks:
      - private

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/etc/grafana/provisioning/datasources # for data
    networks:
      - private

networks:
  private:
    driver: bridge

volumes:
  grafana-storage:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "${PWD}/Docker/grafana-storage"

  prometheus-storage:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "${PWD}/Docker/prometheus/prometheus-storage"

  prometheus-data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "${PWD}/Docker/prometheus/prometheus-data"

  db-storage:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "${PWD}/Docker/db-storage"
